package sortingTechinique;

/*Selection sorts the improved version of bubble sorting as it does
  only one exchange after every pass through the list or array. In 
  selection it first check the smallest/largest no and swap that no 
  with starting location or end location of an array and again
  continue this procedure until all the element is sorted.
  Let's see how this process happens 
  
  Given an array {10,4,43,5,57,91,45,9,7}
  we are checking the smallest no and swapping that no. with the smallest
  position lets see how 
                                  Remarks
  10,4,43,5,57,91,45,9,7          swapping 10 with 5
  4,10,43,5,57,91,45,9,7          swapping 10 with 5
  4,5,43,10,57,91,45,9,7          swapping 43 with 7
  4,5,7,10,57,91,45,9,43          swapping 10 with 9
  4,5,7,9,57,91,45,10,43          swapping 57 with 10
  4,5,7,9,10,91,45,57,43          swapping 43 with 91
  4,5,7,9,10,43,45,57,91          no swapping
  4,5,7,9,10,43,45,57,91          no swapping 
  
    lets see */
public class SelectionSort {
	public static void main(String[] args) {
	int [] arr =	{10,4,43,5,57,91,45,9,7};
	bubbleSort(arr);
	}

	private static void bubbleSort(int[] arr) {

		int length = arr.length - 1, min = 0, temp = 0;
		for (int i = 0; i <= length; i++) {
			min = i;
			for (int j = i + 1; j <= length; j++) {
				if (arr[j] < arr[min]) {
					min = i;
				}
			}
			temp = arr[i];
			arr[i] = arr[min];
			arr[min] = temp;
		}
		
		for(int a :arr) {
			System.out.print(a+" ");
		}

	}

	

}
